#pragma once
/*
    #version:1# (machine generated, don't edit!)

    Generated by sokol-shdc (https://github.com/floooh/sokol-tools)

    Cmdline: sokol-shdc --input src/shader/sprite.glsl --output src/shader/sprite.glsl.h --slang glsl300es:glsl330 --format=sokol_impl

    Overview:

        Shader program 'sprite':
            Get shader desc: sprite_sprite_shader_desc(sg_query_backend());
            Vertex shader: vs
                Attribute slots:
                    ATTR_sprite_vs_a_position = 0
                    ATTR_sprite_vs_a_texcoord0 = 1
                    ATTR_sprite_vs_a_offset = 2
                    ATTR_sprite_vs_a_size = 3
                    ATTR_sprite_vs_a_color = 4
                    ATTR_sprite_vs_a_id = 5
                    ATTR_sprite_vs_a_index = 6
                    ATTR_sprite_vs_a_flags = 7
                Uniform block 'vs_params':
                    C struct: sprite_vs_params_t
                    Bind slot: SLOT_sprite_vs_params = 0
                Image 'data_image':
                    Type: SG_IMAGETYPE_ARRAY
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_sprite_data_image = 0
            Fragment shader: fs
                Uniform block 'fs_params':
                    C struct: sprite_fs_params_t
                    Bind slot: SLOT_sprite_fs_params = 0
                Image 'data_image':
                    Type: SG_IMAGETYPE_ARRAY
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_sprite_data_image = 0
                Image 'atlas_coords':
                    Type: SG_IMAGETYPE_2D
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_sprite_atlas_coords = 1
                Image 'atlas_layers':
                    Type: SG_IMAGETYPE_2D
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_sprite_atlas_layers = 2
                Image 'atlas':
                    Type: SG_IMAGETYPE_ARRAY
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_sprite_atlas = 3
                Image 'palette':
                    Type: SG_IMAGETYPE_3D
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_sprite_palette = 4


    Shader descriptor structs:

        sg_shader sprite = sg_make_shader(sprite_sprite_shader_desc(sg_query_backend()));

    Vertex attribute locations for vertex shader 'vs':

        sg_pipeline pip = sg_make_pipeline(&(sg_pipeline_desc){
            .layout = {
                .attrs = {
                    [ATTR_sprite_vs_a_position] = { ... },
                    [ATTR_sprite_vs_a_texcoord0] = { ... },
                    [ATTR_sprite_vs_a_offset] = { ... },
                    [ATTR_sprite_vs_a_size] = { ... },
                    [ATTR_sprite_vs_a_color] = { ... },
                    [ATTR_sprite_vs_a_id] = { ... },
                    [ATTR_sprite_vs_a_index] = { ... },
                    [ATTR_sprite_vs_a_flags] = { ... },
                },
            },
            ...});

    Image bind slots, use as index in sg_bindings.vs_images[] or .fs_images[]

        SLOT_sprite_data_image = 0;
        SLOT_sprite_atlas_coords = 1;
        SLOT_sprite_atlas_layers = 2;
        SLOT_sprite_atlas = 3;
        SLOT_sprite_palette = 4;

    Bind slot and C-struct for uniform block 'vs_params':

        sprite_vs_params_t vs_params = {
            .yaw = ...;
            .view = ...;
            .proj = ...;
        };
        sg_apply_uniforms(SG_SHADERSTAGE_[VS|FS], SLOT_sprite_vs_params, &SG_RANGE(vs_params));

    Bind slot and C-struct for uniform block 'fs_params':

        sprite_fs_params_t fs_params = {
            .cam_pos = ...;
        };
        sg_apply_uniforms(SG_SHADERSTAGE_[VS|FS], SLOT_sprite_fs_params, &SG_RANGE(fs_params));

*/
#include <stdint.h>
#include <stdbool.h>
#include <string.h>
#include <stddef.h>
#if !defined(SOKOL_GFX_INCLUDED)
  #error "Please include sokol_gfx.h before sprite.glsl.h"
#endif
#if !defined(SOKOL_SHDC_ALIGN)
  #if defined(_MSC_VER)
    #define SOKOL_SHDC_ALIGN(a) __declspec(align(a))
  #else
    #define SOKOL_SHDC_ALIGN(a) __attribute__((aligned(a)))
  #endif
#endif
const sg_shader_desc* sprite_sprite_shader_desc(sg_backend backend);
#define ATTR_sprite_vs_a_position (0)
#define ATTR_sprite_vs_a_texcoord0 (1)
#define ATTR_sprite_vs_a_offset (2)
#define ATTR_sprite_vs_a_size (3)
#define ATTR_sprite_vs_a_color (4)
#define ATTR_sprite_vs_a_id (5)
#define ATTR_sprite_vs_a_index (6)
#define ATTR_sprite_vs_a_flags (7)
#define SLOT_sprite_data_image (0)
#define SLOT_sprite_atlas_coords (1)
#define SLOT_sprite_atlas_layers (2)
#define SLOT_sprite_atlas (3)
#define SLOT_sprite_palette (4)
#define SLOT_sprite_vs_params (0)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct sprite_vs_params_t {
    f32 yaw;
    uint8_t _pad_4[12];
    mat4s view;
    mat4s proj;
} sprite_vs_params_t;
#pragma pack(pop)
#define SLOT_sprite_fs_params (0)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct sprite_fs_params_t {
    vec3s cam_pos;
    uint8_t _pad_12[4];
} sprite_fs_params_t;
#pragma pack(pop)
#if defined(SOKOL_SHDC_IMPL)
/*
    #version 330
    
    uniform vec4 vs_params[9];
    uniform sampler2DArray data_image;
    
    out vec3 pos_w;
    layout(location = 2) in vec3 a_offset;
    layout(location = 3) in vec2 a_size;
    layout(location = 0) in vec3 a_position;
    out vec3 pos_v;
    out vec2 uv;
    layout(location = 1) in vec2 a_texcoord0;
    out vec4 color;
    layout(location = 4) in vec4 a_color;
    layout(location = 7) in float a_flags;
    flat out int id;
    layout(location = 5) in float a_id;
    layout(location = 6) in float a_index;
    flat out vec4 data[8];
    
    void lookup_data(sampler2DArray data_image_1, int type_index, int index, inout vec4 data_1[8])
    {
        vec3 _34 = vec3(textureSize(data_image_1, 0));
        for (int i = 0; i < 8; i++)
        {
            data_1[i] = textureLod(data_image_1, vec3(float(i) / _34.x, float(index) / _34.y, float(type_index)), 0.0);
        }
    }
    
    void main()
    {
        float _82 = (-1.57079637050628662109375) - vs_params[0].x;
        float _99 = a_position.x - 0.5;
        pos_w = vec3(a_offset.x + (a_size.x * (_99 * cos(_82))), a_offset.y + (a_size.x * (_99 * sin(_82))), a_offset.z + (a_size.y * a_position.z));
        pos_v = (mat4(vs_params[1], vs_params[2], vs_params[3], vs_params[4]) * vec4(pos_w, 1.0)).xyz;
        gl_Position = mat4(vs_params[5], vs_params[6], vs_params[7], vs_params[8]) * vec4(pos_v, 1.0);
        uv = a_texcoord0;
        color = a_color + vec4(a_flags);
        id = int(a_id);
        int param = 7;
        int param_1 = int(a_index);
        vec4 param_2[8];
        lookup_data(data_image, param, param_1, param_2);
        data = param_2;
    }
    
*/
static const char sprite_vs_source_glsl330[1487] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x33,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x39,0x5d,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,
    0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x41,0x72,0x72,0x61,0x79,0x20,
    0x64,0x61,0x74,0x61,0x5f,0x69,0x6d,0x61,0x67,0x65,0x3b,0x0a,0x0a,0x6f,0x75,0x74,
    0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x6f,0x73,0x5f,0x77,0x3b,0x0a,0x6c,0x61,0x79,
    0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x32,
    0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x61,0x5f,0x6f,0x66,0x66,0x73,
    0x65,0x74,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,
    0x69,0x6f,0x6e,0x20,0x3d,0x20,0x33,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,
    0x20,0x61,0x5f,0x73,0x69,0x7a,0x65,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,
    0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,
    0x20,0x76,0x65,0x63,0x33,0x20,0x61,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x6f,0x73,0x5f,0x76,
    0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x32,0x20,0x75,0x76,0x3b,0x0a,0x6c,
    0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,
    0x20,0x31,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x61,0x5f,0x74,0x65,
    0x78,0x63,0x6f,0x6f,0x72,0x64,0x30,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,
    0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,
    0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x34,0x29,0x20,0x69,0x6e,
    0x20,0x76,0x65,0x63,0x34,0x20,0x61,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x6c,
    0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,
    0x20,0x37,0x29,0x20,0x69,0x6e,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x61,0x5f,0x66,
    0x6c,0x61,0x67,0x73,0x3b,0x0a,0x66,0x6c,0x61,0x74,0x20,0x6f,0x75,0x74,0x20,0x69,
    0x6e,0x74,0x20,0x69,0x64,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,
    0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x35,0x29,0x20,0x69,0x6e,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x61,0x5f,0x69,0x64,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,
    0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x36,0x29,0x20,
    0x69,0x6e,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x61,0x5f,0x69,0x6e,0x64,0x65,0x78,
    0x3b,0x0a,0x66,0x6c,0x61,0x74,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,
    0x64,0x61,0x74,0x61,0x5b,0x38,0x5d,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6c,
    0x6f,0x6f,0x6b,0x75,0x70,0x5f,0x64,0x61,0x74,0x61,0x28,0x73,0x61,0x6d,0x70,0x6c,
    0x65,0x72,0x32,0x44,0x41,0x72,0x72,0x61,0x79,0x20,0x64,0x61,0x74,0x61,0x5f,0x69,
    0x6d,0x61,0x67,0x65,0x5f,0x31,0x2c,0x20,0x69,0x6e,0x74,0x20,0x74,0x79,0x70,0x65,
    0x5f,0x69,0x6e,0x64,0x65,0x78,0x2c,0x20,0x69,0x6e,0x74,0x20,0x69,0x6e,0x64,0x65,
    0x78,0x2c,0x20,0x69,0x6e,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x64,0x61,
    0x74,0x61,0x5f,0x31,0x5b,0x38,0x5d,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,
    0x65,0x63,0x33,0x20,0x5f,0x33,0x34,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x74,
    0x65,0x78,0x74,0x75,0x72,0x65,0x53,0x69,0x7a,0x65,0x28,0x64,0x61,0x74,0x61,0x5f,
    0x69,0x6d,0x61,0x67,0x65,0x5f,0x31,0x2c,0x20,0x30,0x29,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6f,0x72,0x20,0x28,0x69,0x6e,0x74,0x20,0x69,0x20,0x3d,0x20,0x30,
    0x3b,0x20,0x69,0x20,0x3c,0x20,0x38,0x3b,0x20,0x69,0x2b,0x2b,0x29,0x0a,0x20,0x20,
    0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x64,0x61,0x74,0x61,
    0x5f,0x31,0x5b,0x69,0x5d,0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x4c,
    0x6f,0x64,0x28,0x64,0x61,0x74,0x61,0x5f,0x69,0x6d,0x61,0x67,0x65,0x5f,0x31,0x2c,
    0x20,0x76,0x65,0x63,0x33,0x28,0x66,0x6c,0x6f,0x61,0x74,0x28,0x69,0x29,0x20,0x2f,
    0x20,0x5f,0x33,0x34,0x2e,0x78,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x69,0x6e,
    0x64,0x65,0x78,0x29,0x20,0x2f,0x20,0x5f,0x33,0x34,0x2e,0x79,0x2c,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x28,0x74,0x79,0x70,0x65,0x5f,0x69,0x6e,0x64,0x65,0x78,0x29,0x29,
    0x2c,0x20,0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x7d,0x0a,
    0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x38,0x32,0x20,0x3d,0x20,0x28,
    0x2d,0x31,0x2e,0x35,0x37,0x30,0x37,0x39,0x36,0x33,0x37,0x30,0x35,0x30,0x36,0x32,
    0x38,0x36,0x36,0x32,0x31,0x30,0x39,0x33,0x37,0x35,0x29,0x20,0x2d,0x20,0x76,0x73,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x78,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x39,0x39,0x20,0x3d,0x20,0x61,0x5f,
    0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2e,0x78,0x20,0x2d,0x20,0x30,0x2e,0x35,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x70,0x6f,0x73,0x5f,0x77,0x20,0x3d,0x20,0x76,0x65,
    0x63,0x33,0x28,0x61,0x5f,0x6f,0x66,0x66,0x73,0x65,0x74,0x2e,0x78,0x20,0x2b,0x20,
    0x28,0x61,0x5f,0x73,0x69,0x7a,0x65,0x2e,0x78,0x20,0x2a,0x20,0x28,0x5f,0x39,0x39,
    0x20,0x2a,0x20,0x63,0x6f,0x73,0x28,0x5f,0x38,0x32,0x29,0x29,0x29,0x2c,0x20,0x61,
    0x5f,0x6f,0x66,0x66,0x73,0x65,0x74,0x2e,0x79,0x20,0x2b,0x20,0x28,0x61,0x5f,0x73,
    0x69,0x7a,0x65,0x2e,0x78,0x20,0x2a,0x20,0x28,0x5f,0x39,0x39,0x20,0x2a,0x20,0x73,
    0x69,0x6e,0x28,0x5f,0x38,0x32,0x29,0x29,0x29,0x2c,0x20,0x61,0x5f,0x6f,0x66,0x66,
    0x73,0x65,0x74,0x2e,0x7a,0x20,0x2b,0x20,0x28,0x61,0x5f,0x73,0x69,0x7a,0x65,0x2e,
    0x79,0x20,0x2a,0x20,0x61,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2e,0x7a,
    0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x70,0x6f,0x73,0x5f,0x76,0x20,0x3d,0x20,
    0x28,0x6d,0x61,0x74,0x34,0x28,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,
    0x31,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,0x5d,
    0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x33,0x5d,0x2c,0x20,
    0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x34,0x5d,0x29,0x20,0x2a,0x20,
    0x76,0x65,0x63,0x34,0x28,0x70,0x6f,0x73,0x5f,0x77,0x2c,0x20,0x31,0x2e,0x30,0x29,
    0x29,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x6d,0x61,0x74,0x34,0x28,0x76,0x73,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x35,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x73,0x5b,0x36,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,
    0x61,0x6d,0x73,0x5b,0x37,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x38,0x5d,0x29,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x70,0x6f,0x73,
    0x5f,0x76,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x76,
    0x20,0x3d,0x20,0x61,0x5f,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x30,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x61,0x5f,0x63,0x6f,
    0x6c,0x6f,0x72,0x20,0x2b,0x20,0x76,0x65,0x63,0x34,0x28,0x61,0x5f,0x66,0x6c,0x61,
    0x67,0x73,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x64,0x20,0x3d,0x20,0x69,0x6e,
    0x74,0x28,0x61,0x5f,0x69,0x64,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x37,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x69,0x6e,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x69,0x6e,
    0x74,0x28,0x61,0x5f,0x69,0x6e,0x64,0x65,0x78,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x76,0x65,0x63,0x34,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x5b,0x38,0x5d,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x6c,0x6f,0x6f,0x6b,0x75,0x70,0x5f,0x64,0x61,0x74,0x61,
    0x28,0x64,0x61,0x74,0x61,0x5f,0x69,0x6d,0x61,0x67,0x65,0x2c,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x2c,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x32,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x64,0x61,0x74,0x61,0x20,
    0x3d,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 330
    
    struct sector_render_data_t
    {
        float tex_floor;
        float tex_ceil;
        float light;
    };
    
    struct sprite_render_data_t
    {
        float tex;
        float sector_index;
    };
    
    uniform vec4 fs_params[1];
    uniform sampler2DArray data_image;
    uniform sampler2D atlas_coords;
    uniform sampler2D atlas_layers;
    uniform sampler2DArray atlas;
    uniform sampler3D palette;
    
    flat in vec4 data[8];
    in vec2 uv;
    layout(location = 0) out vec4 frag_color;
    in vec4 color;
    in vec3 pos_w;
    in vec3 pos_v;
    layout(location = 1) out vec4 frag_info;
    flat in int id;
    
    void sprite_render_data_unpack(vec4 vs[8], inout sprite_render_data_t d)
    {
        d.tex = vs[0].x;
        d.sector_index = vs[0].y;
    }
    
    void lookup_data(sampler2DArray data_image_1, int type_index, int index, inout vec4 data_1[8])
    {
        vec3 _82 = vec3(textureSize(data_image_1, 0));
        for (int i = 0; i < 8; i++)
        {
            data_1[i] = texture(data_image_1, vec3(float(i) / _82.x, float(index) / _82.y, float(type_index)));
        }
    }
    
    void sector_render_data_unpack(vec4 vs[8], inout sector_render_data_t d)
    {
        d.tex_floor = vs[0].x;
        d.tex_ceil = vs[0].y;
        d.light = vs[0].z;
    }
    
    vec4 post_process(inout vec4 color_1, sampler3D palette_1, vec3 pos_w_1, vec3 pos_v_1, vec3 cam_pos, float light)
    {
        color_1 *= vec4(light, light, light, 1.0);
        vec4 _123 = color_1;
        vec3 _136 = mix(_123.xyz, vec3(0.100000001490116119384765625), vec3(clamp(length(-pos_v_1.z) * 0.03125, 0.0, 1.0)));
        color_1.x = _136.x;
        color_1.y = _136.y;
        color_1.z = _136.z;
        return color_1;
    }
    
    void main()
    {
        vec4 param[8] = data;
        sprite_render_data_t param_1;
        sprite_render_data_unpack(param, param_1);
        int param_2 = 4;
        int param_3 = int(param_1.sector_index);
        vec4 param_4[8];
        lookup_data(data_image, param_2, param_3, param_4);
        vec4 param_5[8] = param_4;
        sector_render_data_t param_6;
        sector_render_data_unpack(param_5, param_6);
        vec2 _202 = vec2(float(int(param_1.tex)) / float(textureSize(atlas_coords, 0).x), 0.0);
        vec4 _203 = texture(atlas_coords, _202);
        vec2 _207 = _203.xy;
        vec4 param_7 = color * texture(atlas, vec3(_207 + (uv * (_203.zw - _207)), float(int(texture(atlas_layers, _202).x))));
        vec3 param_8 = pos_w;
        vec3 param_9 = pos_v;
        vec3 param_10 = fs_params[0].xyz;
        float param_11 = param_6.light;
        vec4 _277 = post_process(param_7, palette, param_8, param_9, param_10, param_11);
        frag_color = _277;
        if (frag_color.w < 9.9999997473787516355514526367188e-05)
        {
            discard;
        }
        frag_info.w = float(id);
    }
    
*/
static const char sprite_fs_source_glsl330[2555] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x33,0x30,0x0a,0x0a,0x73,0x74,
    0x72,0x75,0x63,0x74,0x20,0x73,0x65,0x63,0x74,0x6f,0x72,0x5f,0x72,0x65,0x6e,0x64,
    0x65,0x72,0x5f,0x64,0x61,0x74,0x61,0x5f,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x74,0x65,0x78,0x5f,0x66,0x6c,0x6f,0x6f,0x72,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x74,0x65,0x78,0x5f,0x63,
    0x65,0x69,0x6c,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x6c,
    0x69,0x67,0x68,0x74,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,
    0x20,0x73,0x70,0x72,0x69,0x74,0x65,0x5f,0x72,0x65,0x6e,0x64,0x65,0x72,0x5f,0x64,
    0x61,0x74,0x61,0x5f,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x74,0x65,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x73,0x65,0x63,0x74,0x6f,0x72,0x5f,0x69,0x6e,0x64,0x65,0x78,0x3b,0x0a,0x7d,
    0x3b,0x0a,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,
    0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,0x3b,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x41,
    0x72,0x72,0x61,0x79,0x20,0x64,0x61,0x74,0x61,0x5f,0x69,0x6d,0x61,0x67,0x65,0x3b,
    0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,
    0x32,0x44,0x20,0x61,0x74,0x6c,0x61,0x73,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x73,0x3b,
    0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,
    0x32,0x44,0x20,0x61,0x74,0x6c,0x61,0x73,0x5f,0x6c,0x61,0x79,0x65,0x72,0x73,0x3b,
    0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,
    0x32,0x44,0x41,0x72,0x72,0x61,0x79,0x20,0x61,0x74,0x6c,0x61,0x73,0x3b,0x0a,0x75,
    0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x33,0x44,
    0x20,0x70,0x61,0x6c,0x65,0x74,0x74,0x65,0x3b,0x0a,0x0a,0x66,0x6c,0x61,0x74,0x20,
    0x69,0x6e,0x20,0x76,0x65,0x63,0x34,0x20,0x64,0x61,0x74,0x61,0x5b,0x38,0x5d,0x3b,
    0x0a,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x75,0x76,0x3b,0x0a,0x6c,0x61,0x79,
    0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,
    0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,
    0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x69,0x6e,0x20,0x76,0x65,0x63,0x34,0x20,0x63,
    0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x6f,
    0x73,0x5f,0x77,0x3b,0x0a,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x6f,0x73,
    0x5f,0x76,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,
    0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,
    0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x69,0x6e,0x66,0x6f,0x3b,0x0a,0x66,0x6c,0x61,
    0x74,0x20,0x69,0x6e,0x20,0x69,0x6e,0x74,0x20,0x69,0x64,0x3b,0x0a,0x0a,0x76,0x6f,
    0x69,0x64,0x20,0x73,0x70,0x72,0x69,0x74,0x65,0x5f,0x72,0x65,0x6e,0x64,0x65,0x72,
    0x5f,0x64,0x61,0x74,0x61,0x5f,0x75,0x6e,0x70,0x61,0x63,0x6b,0x28,0x76,0x65,0x63,
    0x34,0x20,0x76,0x73,0x5b,0x38,0x5d,0x2c,0x20,0x69,0x6e,0x6f,0x75,0x74,0x20,0x73,
    0x70,0x72,0x69,0x74,0x65,0x5f,0x72,0x65,0x6e,0x64,0x65,0x72,0x5f,0x64,0x61,0x74,
    0x61,0x5f,0x74,0x20,0x64,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x64,0x2e,0x74,
    0x65,0x78,0x20,0x3d,0x20,0x76,0x73,0x5b,0x30,0x5d,0x2e,0x78,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x64,0x2e,0x73,0x65,0x63,0x74,0x6f,0x72,0x5f,0x69,0x6e,0x64,0x65,0x78,
    0x20,0x3d,0x20,0x76,0x73,0x5b,0x30,0x5d,0x2e,0x79,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,
    0x6f,0x69,0x64,0x20,0x6c,0x6f,0x6f,0x6b,0x75,0x70,0x5f,0x64,0x61,0x74,0x61,0x28,
    0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x41,0x72,0x72,0x61,0x79,0x20,0x64,
    0x61,0x74,0x61,0x5f,0x69,0x6d,0x61,0x67,0x65,0x5f,0x31,0x2c,0x20,0x69,0x6e,0x74,
    0x20,0x74,0x79,0x70,0x65,0x5f,0x69,0x6e,0x64,0x65,0x78,0x2c,0x20,0x69,0x6e,0x74,
    0x20,0x69,0x6e,0x64,0x65,0x78,0x2c,0x20,0x69,0x6e,0x6f,0x75,0x74,0x20,0x76,0x65,
    0x63,0x34,0x20,0x64,0x61,0x74,0x61,0x5f,0x31,0x5b,0x38,0x5d,0x29,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x38,0x32,0x20,0x3d,0x20,0x76,
    0x65,0x63,0x33,0x28,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x53,0x69,0x7a,0x65,0x28,
    0x64,0x61,0x74,0x61,0x5f,0x69,0x6d,0x61,0x67,0x65,0x5f,0x31,0x2c,0x20,0x30,0x29,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6f,0x72,0x20,0x28,0x69,0x6e,0x74,0x20,
    0x69,0x20,0x3d,0x20,0x30,0x3b,0x20,0x69,0x20,0x3c,0x20,0x38,0x3b,0x20,0x69,0x2b,
    0x2b,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x64,0x61,0x74,0x61,0x5f,0x31,0x5b,0x69,0x5d,0x20,0x3d,0x20,0x74,0x65,0x78,
    0x74,0x75,0x72,0x65,0x28,0x64,0x61,0x74,0x61,0x5f,0x69,0x6d,0x61,0x67,0x65,0x5f,
    0x31,0x2c,0x20,0x76,0x65,0x63,0x33,0x28,0x66,0x6c,0x6f,0x61,0x74,0x28,0x69,0x29,
    0x20,0x2f,0x20,0x5f,0x38,0x32,0x2e,0x78,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,
    0x69,0x6e,0x64,0x65,0x78,0x29,0x20,0x2f,0x20,0x5f,0x38,0x32,0x2e,0x79,0x2c,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x28,0x74,0x79,0x70,0x65,0x5f,0x69,0x6e,0x64,0x65,0x78,
    0x29,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x7d,0x0a,0x0a,0x76,0x6f,
    0x69,0x64,0x20,0x73,0x65,0x63,0x74,0x6f,0x72,0x5f,0x72,0x65,0x6e,0x64,0x65,0x72,
    0x5f,0x64,0x61,0x74,0x61,0x5f,0x75,0x6e,0x70,0x61,0x63,0x6b,0x28,0x76,0x65,0x63,
    0x34,0x20,0x76,0x73,0x5b,0x38,0x5d,0x2c,0x20,0x69,0x6e,0x6f,0x75,0x74,0x20,0x73,
    0x65,0x63,0x74,0x6f,0x72,0x5f,0x72,0x65,0x6e,0x64,0x65,0x72,0x5f,0x64,0x61,0x74,
    0x61,0x5f,0x74,0x20,0x64,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x64,0x2e,0x74,
    0x65,0x78,0x5f,0x66,0x6c,0x6f,0x6f,0x72,0x20,0x3d,0x20,0x76,0x73,0x5b,0x30,0x5d,
    0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x64,0x2e,0x74,0x65,0x78,0x5f,0x63,0x65,
    0x69,0x6c,0x20,0x3d,0x20,0x76,0x73,0x5b,0x30,0x5d,0x2e,0x79,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x64,0x2e,0x6c,0x69,0x67,0x68,0x74,0x20,0x3d,0x20,0x76,0x73,0x5b,0x30,
    0x5d,0x2e,0x7a,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x65,0x63,0x34,0x20,0x70,0x6f,0x73,
    0x74,0x5f,0x70,0x72,0x6f,0x63,0x65,0x73,0x73,0x28,0x69,0x6e,0x6f,0x75,0x74,0x20,
    0x76,0x65,0x63,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x31,0x2c,0x20,0x73,0x61,
    0x6d,0x70,0x6c,0x65,0x72,0x33,0x44,0x20,0x70,0x61,0x6c,0x65,0x74,0x74,0x65,0x5f,
    0x31,0x2c,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x6f,0x73,0x5f,0x77,0x5f,0x31,0x2c,
    0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x6f,0x73,0x5f,0x76,0x5f,0x31,0x2c,0x20,0x76,
    0x65,0x63,0x33,0x20,0x63,0x61,0x6d,0x5f,0x70,0x6f,0x73,0x2c,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x6c,0x69,0x67,0x68,0x74,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x31,0x20,0x2a,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,
    0x6c,0x69,0x67,0x68,0x74,0x2c,0x20,0x6c,0x69,0x67,0x68,0x74,0x2c,0x20,0x6c,0x69,
    0x67,0x68,0x74,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,
    0x65,0x63,0x34,0x20,0x5f,0x31,0x32,0x33,0x20,0x3d,0x20,0x63,0x6f,0x6c,0x6f,0x72,
    0x5f,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x31,0x33,
    0x36,0x20,0x3d,0x20,0x6d,0x69,0x78,0x28,0x5f,0x31,0x32,0x33,0x2e,0x78,0x79,0x7a,
    0x2c,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x31,0x30,0x30,0x30,0x30,0x30,0x30,
    0x30,0x31,0x34,0x39,0x30,0x31,0x31,0x36,0x31,0x31,0x39,0x33,0x38,0x34,0x37,0x36,
    0x35,0x36,0x32,0x35,0x29,0x2c,0x20,0x76,0x65,0x63,0x33,0x28,0x63,0x6c,0x61,0x6d,
    0x70,0x28,0x6c,0x65,0x6e,0x67,0x74,0x68,0x28,0x2d,0x70,0x6f,0x73,0x5f,0x76,0x5f,
    0x31,0x2e,0x7a,0x29,0x20,0x2a,0x20,0x30,0x2e,0x30,0x33,0x31,0x32,0x35,0x2c,0x20,
    0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x31,0x2e,0x78,0x20,0x3d,0x20,0x5f,0x31,0x33,
    0x36,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x31,
    0x2e,0x79,0x20,0x3d,0x20,0x5f,0x31,0x33,0x36,0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x31,0x2e,0x7a,0x20,0x3d,0x20,0x5f,0x31,0x33,
    0x36,0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,
    0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x31,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x6f,0x69,0x64,
    0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,
    0x63,0x34,0x20,0x70,0x61,0x72,0x61,0x6d,0x5b,0x38,0x5d,0x20,0x3d,0x20,0x64,0x61,
    0x74,0x61,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x70,0x72,0x69,0x74,0x65,0x5f,0x72,
    0x65,0x6e,0x64,0x65,0x72,0x5f,0x64,0x61,0x74,0x61,0x5f,0x74,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x70,0x72,0x69,0x74,0x65,
    0x5f,0x72,0x65,0x6e,0x64,0x65,0x72,0x5f,0x64,0x61,0x74,0x61,0x5f,0x75,0x6e,0x70,
    0x61,0x63,0x6b,0x28,0x70,0x61,0x72,0x61,0x6d,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x31,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,0x34,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,
    0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x20,0x3d,0x20,0x69,0x6e,0x74,0x28,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x2e,0x73,0x65,0x63,0x74,0x6f,0x72,0x5f,0x69,
    0x6e,0x64,0x65,0x78,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x5b,0x38,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x6c,0x6f,0x6f,0x6b,0x75,0x70,0x5f,0x64,0x61,0x74,0x61,0x28,0x64,0x61,0x74,0x61,
    0x5f,0x69,0x6d,0x61,0x67,0x65,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x2c,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x34,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x35,0x5b,0x38,0x5d,0x20,0x3d,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x34,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x65,0x63,0x74,0x6f,0x72,0x5f,0x72,0x65,
    0x6e,0x64,0x65,0x72,0x5f,0x64,0x61,0x74,0x61,0x5f,0x74,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x36,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x65,0x63,0x74,0x6f,0x72,0x5f,
    0x72,0x65,0x6e,0x64,0x65,0x72,0x5f,0x64,0x61,0x74,0x61,0x5f,0x75,0x6e,0x70,0x61,
    0x63,0x6b,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,0x2c,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x36,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x32,0x20,0x5f,
    0x32,0x30,0x32,0x20,0x3d,0x20,0x76,0x65,0x63,0x32,0x28,0x66,0x6c,0x6f,0x61,0x74,
    0x28,0x69,0x6e,0x74,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x2e,0x74,0x65,0x78,
    0x29,0x29,0x20,0x2f,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x74,0x65,0x78,0x74,0x75,
    0x72,0x65,0x53,0x69,0x7a,0x65,0x28,0x61,0x74,0x6c,0x61,0x73,0x5f,0x63,0x6f,0x6f,
    0x72,0x64,0x73,0x2c,0x20,0x30,0x29,0x2e,0x78,0x29,0x2c,0x20,0x30,0x2e,0x30,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x32,0x30,0x33,0x20,
    0x3d,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x61,0x74,0x6c,0x61,0x73,0x5f,
    0x63,0x6f,0x6f,0x72,0x64,0x73,0x2c,0x20,0x5f,0x32,0x30,0x32,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x76,0x65,0x63,0x32,0x20,0x5f,0x32,0x30,0x37,0x20,0x3d,0x20,0x5f,
    0x32,0x30,0x33,0x2e,0x78,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x37,0x20,0x3d,0x20,0x63,0x6f,0x6c,0x6f,0x72,
    0x20,0x2a,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x61,0x74,0x6c,0x61,0x73,
    0x2c,0x20,0x76,0x65,0x63,0x33,0x28,0x5f,0x32,0x30,0x37,0x20,0x2b,0x20,0x28,0x75,
    0x76,0x20,0x2a,0x20,0x28,0x5f,0x32,0x30,0x33,0x2e,0x7a,0x77,0x20,0x2d,0x20,0x5f,
    0x32,0x30,0x37,0x29,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x69,0x6e,0x74,
    0x28,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x61,0x74,0x6c,0x61,0x73,0x5f,0x6c,
    0x61,0x79,0x65,0x72,0x73,0x2c,0x20,0x5f,0x32,0x30,0x32,0x29,0x2e,0x78,0x29,0x29,
    0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x38,0x20,0x3d,0x20,0x70,0x6f,0x73,0x5f,0x77,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x39,0x20,0x3d,
    0x20,0x70,0x6f,0x73,0x5f,0x76,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x30,0x20,0x3d,0x20,0x66,0x73,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x31,
    0x20,0x3d,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x36,0x2e,0x6c,0x69,0x67,0x68,0x74,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x32,0x37,0x37,0x20,
    0x3d,0x20,0x70,0x6f,0x73,0x74,0x5f,0x70,0x72,0x6f,0x63,0x65,0x73,0x73,0x28,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x37,0x2c,0x20,0x70,0x61,0x6c,0x65,0x74,0x74,0x65,0x2c,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x38,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x39,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x30,0x2c,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x31,0x31,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,
    0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x5f,0x32,0x37,0x37,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,
    0x72,0x2e,0x77,0x20,0x3c,0x20,0x39,0x2e,0x39,0x39,0x39,0x39,0x39,0x39,0x37,0x34,
    0x37,0x33,0x37,0x38,0x37,0x35,0x31,0x36,0x33,0x35,0x35,0x35,0x31,0x34,0x35,0x32,
    0x36,0x33,0x36,0x37,0x31,0x38,0x38,0x65,0x2d,0x30,0x35,0x29,0x0a,0x20,0x20,0x20,
    0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x64,0x69,0x73,0x63,0x61,
    0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,
    0x61,0x67,0x5f,0x69,0x6e,0x66,0x6f,0x2e,0x77,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x28,0x69,0x64,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 300 es
    
    uniform vec4 vs_params[9];
    uniform highp sampler2DArray data_image;
    
    out vec3 pos_w;
    layout(location = 2) in vec3 a_offset;
    layout(location = 3) in vec2 a_size;
    layout(location = 0) in vec3 a_position;
    out vec3 pos_v;
    out vec2 uv;
    layout(location = 1) in vec2 a_texcoord0;
    out vec4 color;
    layout(location = 4) in vec4 a_color;
    layout(location = 7) in float a_flags;
    flat out int id;
    layout(location = 5) in float a_id;
    layout(location = 6) in float a_index;
    flat out vec4 data[8];
    
    void lookup_data(highp sampler2DArray data_image_1, int type_index, int index, inout vec4 data_1[8])
    {
        vec3 _34 = vec3(textureSize(data_image_1, 0));
        for (int i = 0; i < 8; i++)
        {
            data_1[i] = textureLod(data_image_1, vec3(float(i) / _34.x, float(index) / _34.y, float(type_index)), 0.0);
        }
    }
    
    void main()
    {
        float _82 = (-1.57079637050628662109375) - vs_params[0].x;
        float _99 = a_position.x - 0.5;
        pos_w = vec3(a_offset.x + (a_size.x * (_99 * cos(_82))), a_offset.y + (a_size.x * (_99 * sin(_82))), a_offset.z + (a_size.y * a_position.z));
        pos_v = (mat4(vs_params[1], vs_params[2], vs_params[3], vs_params[4]) * vec4(pos_w, 1.0)).xyz;
        gl_Position = mat4(vs_params[5], vs_params[6], vs_params[7], vs_params[8]) * vec4(pos_v, 1.0);
        uv = a_texcoord0;
        color = a_color + vec4(a_flags);
        id = int(a_id);
        int param = 7;
        int param_1 = int(a_index);
        vec4 param_2[8];
        lookup_data(data_image, param, param_1, param_2);
        data = param_2;
    }
    
*/
static const char sprite_vs_source_glsl300es[1502] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x73,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x39,0x5d,0x3b,0x0a,0x75,0x6e,0x69,0x66,
    0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,
    0x72,0x32,0x44,0x41,0x72,0x72,0x61,0x79,0x20,0x64,0x61,0x74,0x61,0x5f,0x69,0x6d,
    0x61,0x67,0x65,0x3b,0x0a,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x33,0x20,0x70,
    0x6f,0x73,0x5f,0x77,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,
    0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x32,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,
    0x63,0x33,0x20,0x61,0x5f,0x6f,0x66,0x66,0x73,0x65,0x74,0x3b,0x0a,0x6c,0x61,0x79,
    0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x33,
    0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x61,0x5f,0x73,0x69,0x7a,0x65,
    0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,
    0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x61,
    0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,
    0x65,0x63,0x33,0x20,0x70,0x6f,0x73,0x5f,0x76,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,
    0x65,0x63,0x32,0x20,0x75,0x76,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,
    0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,0x20,
    0x76,0x65,0x63,0x32,0x20,0x61,0x5f,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x30,
    0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,
    0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,
    0x6e,0x20,0x3d,0x20,0x34,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x34,0x20,0x61,
    0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,
    0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x37,0x29,0x20,0x69,0x6e,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x61,0x5f,0x66,0x6c,0x61,0x67,0x73,0x3b,0x0a,0x66,
    0x6c,0x61,0x74,0x20,0x6f,0x75,0x74,0x20,0x69,0x6e,0x74,0x20,0x69,0x64,0x3b,0x0a,
    0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x35,0x29,0x20,0x69,0x6e,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x61,0x5f,
    0x69,0x64,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,
    0x69,0x6f,0x6e,0x20,0x3d,0x20,0x36,0x29,0x20,0x69,0x6e,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x61,0x5f,0x69,0x6e,0x64,0x65,0x78,0x3b,0x0a,0x66,0x6c,0x61,0x74,0x20,
    0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x64,0x61,0x74,0x61,0x5b,0x38,0x5d,
    0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6c,0x6f,0x6f,0x6b,0x75,0x70,0x5f,0x64,
    0x61,0x74,0x61,0x28,0x68,0x69,0x67,0x68,0x70,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,
    0x72,0x32,0x44,0x41,0x72,0x72,0x61,0x79,0x20,0x64,0x61,0x74,0x61,0x5f,0x69,0x6d,
    0x61,0x67,0x65,0x5f,0x31,0x2c,0x20,0x69,0x6e,0x74,0x20,0x74,0x79,0x70,0x65,0x5f,
    0x69,0x6e,0x64,0x65,0x78,0x2c,0x20,0x69,0x6e,0x74,0x20,0x69,0x6e,0x64,0x65,0x78,
    0x2c,0x20,0x69,0x6e,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x64,0x61,0x74,
    0x61,0x5f,0x31,0x5b,0x38,0x5d,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,
    0x63,0x33,0x20,0x5f,0x33,0x34,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x74,0x65,
    0x78,0x74,0x75,0x72,0x65,0x53,0x69,0x7a,0x65,0x28,0x64,0x61,0x74,0x61,0x5f,0x69,
    0x6d,0x61,0x67,0x65,0x5f,0x31,0x2c,0x20,0x30,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6f,0x72,0x20,0x28,0x69,0x6e,0x74,0x20,0x69,0x20,0x3d,0x20,0x30,0x3b,
    0x20,0x69,0x20,0x3c,0x20,0x38,0x3b,0x20,0x69,0x2b,0x2b,0x29,0x0a,0x20,0x20,0x20,
    0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x64,0x61,0x74,0x61,0x5f,
    0x31,0x5b,0x69,0x5d,0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x4c,0x6f,
    0x64,0x28,0x64,0x61,0x74,0x61,0x5f,0x69,0x6d,0x61,0x67,0x65,0x5f,0x31,0x2c,0x20,
    0x76,0x65,0x63,0x33,0x28,0x66,0x6c,0x6f,0x61,0x74,0x28,0x69,0x29,0x20,0x2f,0x20,
    0x5f,0x33,0x34,0x2e,0x78,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x69,0x6e,0x64,
    0x65,0x78,0x29,0x20,0x2f,0x20,0x5f,0x33,0x34,0x2e,0x79,0x2c,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x28,0x74,0x79,0x70,0x65,0x5f,0x69,0x6e,0x64,0x65,0x78,0x29,0x29,0x2c,
    0x20,0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x7d,0x0a,0x0a,
    0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x38,0x32,0x20,0x3d,0x20,0x28,0x2d,
    0x31,0x2e,0x35,0x37,0x30,0x37,0x39,0x36,0x33,0x37,0x30,0x35,0x30,0x36,0x32,0x38,
    0x36,0x36,0x32,0x31,0x30,0x39,0x33,0x37,0x35,0x29,0x20,0x2d,0x20,0x76,0x73,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x39,0x39,0x20,0x3d,0x20,0x61,0x5f,0x70,
    0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2e,0x78,0x20,0x2d,0x20,0x30,0x2e,0x35,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x70,0x6f,0x73,0x5f,0x77,0x20,0x3d,0x20,0x76,0x65,0x63,
    0x33,0x28,0x61,0x5f,0x6f,0x66,0x66,0x73,0x65,0x74,0x2e,0x78,0x20,0x2b,0x20,0x28,
    0x61,0x5f,0x73,0x69,0x7a,0x65,0x2e,0x78,0x20,0x2a,0x20,0x28,0x5f,0x39,0x39,0x20,
    0x2a,0x20,0x63,0x6f,0x73,0x28,0x5f,0x38,0x32,0x29,0x29,0x29,0x2c,0x20,0x61,0x5f,
    0x6f,0x66,0x66,0x73,0x65,0x74,0x2e,0x79,0x20,0x2b,0x20,0x28,0x61,0x5f,0x73,0x69,
    0x7a,0x65,0x2e,0x78,0x20,0x2a,0x20,0x28,0x5f,0x39,0x39,0x20,0x2a,0x20,0x73,0x69,
    0x6e,0x28,0x5f,0x38,0x32,0x29,0x29,0x29,0x2c,0x20,0x61,0x5f,0x6f,0x66,0x66,0x73,
    0x65,0x74,0x2e,0x7a,0x20,0x2b,0x20,0x28,0x61,0x5f,0x73,0x69,0x7a,0x65,0x2e,0x79,
    0x20,0x2a,0x20,0x61,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2e,0x7a,0x29,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x70,0x6f,0x73,0x5f,0x76,0x20,0x3d,0x20,0x28,
    0x6d,0x61,0x74,0x34,0x28,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,
    0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,0x5d,0x2c,
    0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x33,0x5d,0x2c,0x20,0x76,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x34,0x5d,0x29,0x20,0x2a,0x20,0x76,
    0x65,0x63,0x34,0x28,0x70,0x6f,0x73,0x5f,0x77,0x2c,0x20,0x31,0x2e,0x30,0x29,0x29,
    0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x6d,0x61,0x74,0x34,0x28,0x76,0x73,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x35,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x36,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x37,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,
    0x5b,0x38,0x5d,0x29,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x70,0x6f,0x73,0x5f,
    0x76,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x76,0x20,
    0x3d,0x20,0x61,0x5f,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x30,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x61,0x5f,0x63,0x6f,0x6c,
    0x6f,0x72,0x20,0x2b,0x20,0x76,0x65,0x63,0x34,0x28,0x61,0x5f,0x66,0x6c,0x61,0x67,
    0x73,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x64,0x20,0x3d,0x20,0x69,0x6e,0x74,
    0x28,0x61,0x5f,0x69,0x64,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x37,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,
    0x6e,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x69,0x6e,0x74,
    0x28,0x61,0x5f,0x69,0x6e,0x64,0x65,0x78,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,
    0x65,0x63,0x34,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x5b,0x38,0x5d,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x6c,0x6f,0x6f,0x6b,0x75,0x70,0x5f,0x64,0x61,0x74,0x61,0x28,
    0x64,0x61,0x74,0x61,0x5f,0x69,0x6d,0x61,0x67,0x65,0x2c,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x2c,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x32,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x64,0x61,0x74,0x61,0x20,0x3d,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 300 es
    precision mediump float;
    precision highp int;
    
    struct sector_render_data_t
    {
        highp float tex_floor;
        highp float tex_ceil;
        highp float light;
    };
    
    struct sprite_render_data_t
    {
        highp float tex;
        highp float sector_index;
    };
    
    uniform highp vec4 fs_params[1];
    uniform highp sampler2DArray data_image;
    uniform highp sampler2D atlas_coords;
    uniform highp sampler2D atlas_layers;
    uniform highp sampler2DArray atlas;
    uniform highp sampler3D palette;
    
    flat in highp vec4 data[8];
    in highp vec2 uv;
    layout(location = 0) out highp vec4 frag_color;
    in highp vec4 color;
    in highp vec3 pos_w;
    in highp vec3 pos_v;
    layout(location = 1) out highp vec4 frag_info;
    flat in int id;
    
    void sprite_render_data_unpack(highp vec4 vs[8], inout sprite_render_data_t d)
    {
        d.tex = vs[0].x;
        d.sector_index = vs[0].y;
    }
    
    void lookup_data(highp sampler2DArray data_image_1, int type_index, int index, inout highp vec4 data_1[8])
    {
        highp vec3 _82 = vec3(textureSize(data_image_1, 0));
        for (int i = 0; i < 8; i++)
        {
            data_1[i] = texture(data_image_1, vec3(float(i) / _82.x, float(index) / _82.y, float(type_index)));
        }
    }
    
    void sector_render_data_unpack(highp vec4 vs[8], inout sector_render_data_t d)
    {
        d.tex_floor = vs[0].x;
        d.tex_ceil = vs[0].y;
        d.light = vs[0].z;
    }
    
    highp vec4 post_process(inout highp vec4 color_1, highp sampler3D palette_1, highp vec3 pos_w_1, highp vec3 pos_v_1, highp vec3 cam_pos, highp float light)
    {
        color_1 *= vec4(light, light, light, 1.0);
        highp vec4 _123 = color_1;
        highp vec3 _136 = mix(_123.xyz, vec3(0.100000001490116119384765625), vec3(clamp(length(-pos_v_1.z) * 0.03125, 0.0, 1.0)));
        color_1.x = _136.x;
        color_1.y = _136.y;
        color_1.z = _136.z;
        return color_1;
    }
    
    void main()
    {
        highp vec4 param[8] = data;
        sprite_render_data_t param_1;
        sprite_render_data_unpack(param, param_1);
        int param_2 = 4;
        int param_3 = int(param_1.sector_index);
        highp vec4 param_4[8];
        lookup_data(data_image, param_2, param_3, param_4);
        highp vec4 param_5[8] = param_4;
        sector_render_data_t param_6;
        sector_render_data_unpack(param_5, param_6);
        highp vec2 _202 = vec2(float(int(param_1.tex)) / float(textureSize(atlas_coords, 0).x), 0.0);
        highp vec4 _203 = texture(atlas_coords, _202);
        highp vec2 _207 = _203.xy;
        highp vec4 param_7 = color * texture(atlas, vec3(_207 + (uv * (_203.zw - _207)), float(int(texture(atlas_layers, _202).x))));
        highp vec3 param_8 = pos_w;
        highp vec3 param_9 = pos_v;
        highp vec3 param_10 = fs_params[0].xyz;
        highp float param_11 = param_6.light;
        highp vec4 _277 = post_process(param_7, palette, param_8, param_9, param_10, param_11);
        frag_color = _277;
        if (frag_color.w < 9.9999997473787516355514526367188e-05)
        {
            discard;
        }
        frag_info.w = float(id);
    }
    
*/
static const char sprite_fs_source_glsl300es[2868] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x70,0x72,0x65,0x63,0x69,0x73,0x69,0x6f,0x6e,0x20,0x6d,0x65,0x64,0x69,0x75,0x6d,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x3b,0x0a,0x70,0x72,0x65,0x63,0x69,0x73,0x69,
    0x6f,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x69,0x6e,0x74,0x3b,0x0a,0x0a,0x73,
    0x74,0x72,0x75,0x63,0x74,0x20,0x73,0x65,0x63,0x74,0x6f,0x72,0x5f,0x72,0x65,0x6e,
    0x64,0x65,0x72,0x5f,0x64,0x61,0x74,0x61,0x5f,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x74,0x65,0x78,
    0x5f,0x66,0x6c,0x6f,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x74,0x65,0x78,0x5f,0x63,0x65,0x69,0x6c,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x6c,0x69,0x67,0x68,0x74,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,
    0x75,0x63,0x74,0x20,0x73,0x70,0x72,0x69,0x74,0x65,0x5f,0x72,0x65,0x6e,0x64,0x65,
    0x72,0x5f,0x64,0x61,0x74,0x61,0x5f,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x74,0x65,0x78,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x73,0x65,0x63,0x74,0x6f,0x72,0x5f,0x69,0x6e,0x64,0x65,0x78,0x3b,0x0a,0x7d,0x3b,
    0x0a,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x76,0x65,0x63,0x34,0x20,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,
    0x5d,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,
    0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x41,0x72,0x72,0x61,0x79,0x20,
    0x64,0x61,0x74,0x61,0x5f,0x69,0x6d,0x61,0x67,0x65,0x3b,0x0a,0x75,0x6e,0x69,0x66,
    0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,
    0x72,0x32,0x44,0x20,0x61,0x74,0x6c,0x61,0x73,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x73,
    0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x61,0x74,0x6c,0x61,0x73,0x5f,
    0x6c,0x61,0x79,0x65,0x72,0x73,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x41,
    0x72,0x72,0x61,0x79,0x20,0x61,0x74,0x6c,0x61,0x73,0x3b,0x0a,0x75,0x6e,0x69,0x66,
    0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,
    0x72,0x33,0x44,0x20,0x70,0x61,0x6c,0x65,0x74,0x74,0x65,0x3b,0x0a,0x0a,0x66,0x6c,
    0x61,0x74,0x20,0x69,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,
    0x20,0x64,0x61,0x74,0x61,0x5b,0x38,0x5d,0x3b,0x0a,0x69,0x6e,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x75,0x76,0x3b,0x0a,0x6c,0x61,0x79,0x6f,
    0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,
    0x20,0x6f,0x75,0x74,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,
    0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x69,0x6e,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,
    0x0a,0x69,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,
    0x6f,0x73,0x5f,0x77,0x3b,0x0a,0x69,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,
    0x65,0x63,0x33,0x20,0x70,0x6f,0x73,0x5f,0x76,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,
    0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,
    0x6f,0x75,0x74,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x66,
    0x72,0x61,0x67,0x5f,0x69,0x6e,0x66,0x6f,0x3b,0x0a,0x66,0x6c,0x61,0x74,0x20,0x69,
    0x6e,0x20,0x69,0x6e,0x74,0x20,0x69,0x64,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,
    0x73,0x70,0x72,0x69,0x74,0x65,0x5f,0x72,0x65,0x6e,0x64,0x65,0x72,0x5f,0x64,0x61,
    0x74,0x61,0x5f,0x75,0x6e,0x70,0x61,0x63,0x6b,0x28,0x68,0x69,0x67,0x68,0x70,0x20,
    0x76,0x65,0x63,0x34,0x20,0x76,0x73,0x5b,0x38,0x5d,0x2c,0x20,0x69,0x6e,0x6f,0x75,
    0x74,0x20,0x73,0x70,0x72,0x69,0x74,0x65,0x5f,0x72,0x65,0x6e,0x64,0x65,0x72,0x5f,
    0x64,0x61,0x74,0x61,0x5f,0x74,0x20,0x64,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x64,0x2e,0x74,0x65,0x78,0x20,0x3d,0x20,0x76,0x73,0x5b,0x30,0x5d,0x2e,0x78,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x64,0x2e,0x73,0x65,0x63,0x74,0x6f,0x72,0x5f,0x69,0x6e,
    0x64,0x65,0x78,0x20,0x3d,0x20,0x76,0x73,0x5b,0x30,0x5d,0x2e,0x79,0x3b,0x0a,0x7d,
    0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6c,0x6f,0x6f,0x6b,0x75,0x70,0x5f,0x64,0x61,
    0x74,0x61,0x28,0x68,0x69,0x67,0x68,0x70,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,
    0x32,0x44,0x41,0x72,0x72,0x61,0x79,0x20,0x64,0x61,0x74,0x61,0x5f,0x69,0x6d,0x61,
    0x67,0x65,0x5f,0x31,0x2c,0x20,0x69,0x6e,0x74,0x20,0x74,0x79,0x70,0x65,0x5f,0x69,
    0x6e,0x64,0x65,0x78,0x2c,0x20,0x69,0x6e,0x74,0x20,0x69,0x6e,0x64,0x65,0x78,0x2c,
    0x20,0x69,0x6e,0x6f,0x75,0x74,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x34,0x20,0x64,0x61,0x74,0x61,0x5f,0x31,0x5b,0x38,0x5d,0x29,0x0a,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x38,
    0x32,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x74,0x65,0x78,0x74,0x75,0x72,0x65,
    0x53,0x69,0x7a,0x65,0x28,0x64,0x61,0x74,0x61,0x5f,0x69,0x6d,0x61,0x67,0x65,0x5f,
    0x31,0x2c,0x20,0x30,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6f,0x72,0x20,
    0x28,0x69,0x6e,0x74,0x20,0x69,0x20,0x3d,0x20,0x30,0x3b,0x20,0x69,0x20,0x3c,0x20,
    0x38,0x3b,0x20,0x69,0x2b,0x2b,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x64,0x61,0x74,0x61,0x5f,0x31,0x5b,0x69,0x5d,0x20,
    0x3d,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x64,0x61,0x74,0x61,0x5f,0x69,
    0x6d,0x61,0x67,0x65,0x5f,0x31,0x2c,0x20,0x76,0x65,0x63,0x33,0x28,0x66,0x6c,0x6f,
    0x61,0x74,0x28,0x69,0x29,0x20,0x2f,0x20,0x5f,0x38,0x32,0x2e,0x78,0x2c,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x28,0x69,0x6e,0x64,0x65,0x78,0x29,0x20,0x2f,0x20,0x5f,0x38,
    0x32,0x2e,0x79,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x74,0x79,0x70,0x65,0x5f,
    0x69,0x6e,0x64,0x65,0x78,0x29,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,
    0x7d,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x73,0x65,0x63,0x74,0x6f,0x72,0x5f,0x72,
    0x65,0x6e,0x64,0x65,0x72,0x5f,0x64,0x61,0x74,0x61,0x5f,0x75,0x6e,0x70,0x61,0x63,
    0x6b,0x28,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x73,0x5b,
    0x38,0x5d,0x2c,0x20,0x69,0x6e,0x6f,0x75,0x74,0x20,0x73,0x65,0x63,0x74,0x6f,0x72,
    0x5f,0x72,0x65,0x6e,0x64,0x65,0x72,0x5f,0x64,0x61,0x74,0x61,0x5f,0x74,0x20,0x64,
    0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x64,0x2e,0x74,0x65,0x78,0x5f,0x66,0x6c,
    0x6f,0x6f,0x72,0x20,0x3d,0x20,0x76,0x73,0x5b,0x30,0x5d,0x2e,0x78,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x64,0x2e,0x74,0x65,0x78,0x5f,0x63,0x65,0x69,0x6c,0x20,0x3d,0x20,
    0x76,0x73,0x5b,0x30,0x5d,0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x64,0x2e,0x6c,
    0x69,0x67,0x68,0x74,0x20,0x3d,0x20,0x76,0x73,0x5b,0x30,0x5d,0x2e,0x7a,0x3b,0x0a,
    0x7d,0x0a,0x0a,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x70,0x6f,
    0x73,0x74,0x5f,0x70,0x72,0x6f,0x63,0x65,0x73,0x73,0x28,0x69,0x6e,0x6f,0x75,0x74,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x63,0x6f,0x6c,0x6f,
    0x72,0x5f,0x31,0x2c,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x73,0x61,0x6d,0x70,0x6c,
    0x65,0x72,0x33,0x44,0x20,0x70,0x61,0x6c,0x65,0x74,0x74,0x65,0x5f,0x31,0x2c,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x6f,0x73,0x5f,0x77,
    0x5f,0x31,0x2c,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,
    0x6f,0x73,0x5f,0x76,0x5f,0x31,0x2c,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,
    0x63,0x33,0x20,0x63,0x61,0x6d,0x5f,0x70,0x6f,0x73,0x2c,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x6c,0x69,0x67,0x68,0x74,0x29,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x31,0x20,0x2a,0x3d,0x20,
    0x76,0x65,0x63,0x34,0x28,0x6c,0x69,0x67,0x68,0x74,0x2c,0x20,0x6c,0x69,0x67,0x68,
    0x74,0x2c,0x20,0x6c,0x69,0x67,0x68,0x74,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,
    0x31,0x32,0x33,0x20,0x3d,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x31,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x31,
    0x33,0x36,0x20,0x3d,0x20,0x6d,0x69,0x78,0x28,0x5f,0x31,0x32,0x33,0x2e,0x78,0x79,
    0x7a,0x2c,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x31,0x30,0x30,0x30,0x30,0x30,
    0x30,0x30,0x31,0x34,0x39,0x30,0x31,0x31,0x36,0x31,0x31,0x39,0x33,0x38,0x34,0x37,
    0x36,0x35,0x36,0x32,0x35,0x29,0x2c,0x20,0x76,0x65,0x63,0x33,0x28,0x63,0x6c,0x61,
    0x6d,0x70,0x28,0x6c,0x65,0x6e,0x67,0x74,0x68,0x28,0x2d,0x70,0x6f,0x73,0x5f,0x76,
    0x5f,0x31,0x2e,0x7a,0x29,0x20,0x2a,0x20,0x30,0x2e,0x30,0x33,0x31,0x32,0x35,0x2c,
    0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x29,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x31,0x2e,0x78,0x20,0x3d,0x20,0x5f,0x31,
    0x33,0x36,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x5f,
    0x31,0x2e,0x79,0x20,0x3d,0x20,0x5f,0x31,0x33,0x36,0x2e,0x79,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x31,0x2e,0x7a,0x20,0x3d,0x20,0x5f,0x31,
    0x33,0x36,0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,
    0x20,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x31,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x6f,0x69,
    0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x70,0x61,0x72,0x61,0x6d,0x5b,
    0x38,0x5d,0x20,0x3d,0x20,0x64,0x61,0x74,0x61,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,
    0x70,0x72,0x69,0x74,0x65,0x5f,0x72,0x65,0x6e,0x64,0x65,0x72,0x5f,0x64,0x61,0x74,
    0x61,0x5f,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x73,0x70,0x72,0x69,0x74,0x65,0x5f,0x72,0x65,0x6e,0x64,0x65,0x72,0x5f,0x64,
    0x61,0x74,0x61,0x5f,0x75,0x6e,0x70,0x61,0x63,0x6b,0x28,0x70,0x61,0x72,0x61,0x6d,
    0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x69,0x6e,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,0x34,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,
    0x20,0x3d,0x20,0x69,0x6e,0x74,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x2e,0x73,
    0x65,0x63,0x74,0x6f,0x72,0x5f,0x69,0x6e,0x64,0x65,0x78,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x34,0x5b,0x38,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6c,0x6f,0x6f,
    0x6b,0x75,0x70,0x5f,0x64,0x61,0x74,0x61,0x28,0x64,0x61,0x74,0x61,0x5f,0x69,0x6d,
    0x61,0x67,0x65,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x2c,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x33,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,0x5b,0x38,0x5d,0x20,0x3d,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x34,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x65,0x63,0x74,0x6f,0x72,
    0x5f,0x72,0x65,0x6e,0x64,0x65,0x72,0x5f,0x64,0x61,0x74,0x61,0x5f,0x74,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x36,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x65,0x63,0x74,
    0x6f,0x72,0x5f,0x72,0x65,0x6e,0x64,0x65,0x72,0x5f,0x64,0x61,0x74,0x61,0x5f,0x75,
    0x6e,0x70,0x61,0x63,0x6b,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,0x2c,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x36,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x5f,0x32,0x30,0x32,0x20,0x3d,0x20,0x76,
    0x65,0x63,0x32,0x28,0x66,0x6c,0x6f,0x61,0x74,0x28,0x69,0x6e,0x74,0x28,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x31,0x2e,0x74,0x65,0x78,0x29,0x29,0x20,0x2f,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x28,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x53,0x69,0x7a,0x65,0x28,
    0x61,0x74,0x6c,0x61,0x73,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x73,0x2c,0x20,0x30,0x29,
    0x2e,0x78,0x29,0x2c,0x20,0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x32,0x30,0x33,0x20,0x3d,
    0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x61,0x74,0x6c,0x61,0x73,0x5f,0x63,
    0x6f,0x6f,0x72,0x64,0x73,0x2c,0x20,0x5f,0x32,0x30,0x32,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x5f,0x32,0x30,
    0x37,0x20,0x3d,0x20,0x5f,0x32,0x30,0x33,0x2e,0x78,0x79,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x37,0x20,0x3d,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x2a,0x20,0x74,0x65,
    0x78,0x74,0x75,0x72,0x65,0x28,0x61,0x74,0x6c,0x61,0x73,0x2c,0x20,0x76,0x65,0x63,
    0x33,0x28,0x5f,0x32,0x30,0x37,0x20,0x2b,0x20,0x28,0x75,0x76,0x20,0x2a,0x20,0x28,
    0x5f,0x32,0x30,0x33,0x2e,0x7a,0x77,0x20,0x2d,0x20,0x5f,0x32,0x30,0x37,0x29,0x29,
    0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x69,0x6e,0x74,0x28,0x74,0x65,0x78,0x74,
    0x75,0x72,0x65,0x28,0x61,0x74,0x6c,0x61,0x73,0x5f,0x6c,0x61,0x79,0x65,0x72,0x73,
    0x2c,0x20,0x5f,0x32,0x30,0x32,0x29,0x2e,0x78,0x29,0x29,0x29,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x38,0x20,0x3d,0x20,0x70,0x6f,0x73,0x5f,0x77,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x39,0x20,0x3d,0x20,0x70,0x6f,0x73,0x5f,0x76,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x31,0x30,0x20,0x3d,0x20,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x31,0x31,0x20,0x3d,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x36,0x2e,0x6c,0x69,
    0x67,0x68,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,
    0x65,0x63,0x34,0x20,0x5f,0x32,0x37,0x37,0x20,0x3d,0x20,0x70,0x6f,0x73,0x74,0x5f,
    0x70,0x72,0x6f,0x63,0x65,0x73,0x73,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x37,0x2c,
    0x20,0x70,0x61,0x6c,0x65,0x74,0x74,0x65,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x38,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x39,0x2c,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x31,0x30,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x31,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,
    0x3d,0x20,0x5f,0x32,0x37,0x37,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,
    0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x77,0x20,0x3c,0x20,0x39,
    0x2e,0x39,0x39,0x39,0x39,0x39,0x39,0x37,0x34,0x37,0x33,0x37,0x38,0x37,0x35,0x31,
    0x36,0x33,0x35,0x35,0x35,0x31,0x34,0x35,0x32,0x36,0x33,0x36,0x37,0x31,0x38,0x38,
    0x65,0x2d,0x30,0x35,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x64,0x69,0x73,0x63,0x61,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x69,0x6e,0x66,0x6f,
    0x2e,0x77,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x69,0x64,0x29,0x3b,0x0a,
    0x7d,0x0a,0x0a,0x00,
};
const sg_shader_desc* sprite_sprite_shader_desc(sg_backend backend) {
  if (backend == SG_BACKEND_GLCORE33) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.attrs[0].name = "a_position";
      desc.attrs[1].name = "a_texcoord0";
      desc.attrs[2].name = "a_offset";
      desc.attrs[3].name = "a_size";
      desc.attrs[4].name = "a_color";
      desc.attrs[5].name = "a_id";
      desc.attrs[6].name = "a_index";
      desc.attrs[7].name = "a_flags";
      desc.vs.source = sprite_vs_source_glsl330;
      desc.vs.entry = "main";
      desc.vs.uniform_blocks[0].size = 144;
      desc.vs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
      desc.vs.uniform_blocks[0].uniforms[0].name = "vs_params";
      desc.vs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.vs.uniform_blocks[0].uniforms[0].array_count = 9;
      desc.vs.images[0].name = "data_image";
      desc.vs.images[0].image_type = SG_IMAGETYPE_ARRAY;
      desc.vs.images[0].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.fs.source = sprite_fs_source_glsl330;
      desc.fs.entry = "main";
      desc.fs.uniform_blocks[0].size = 16;
      desc.fs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
      desc.fs.uniform_blocks[0].uniforms[0].name = "fs_params";
      desc.fs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.fs.uniform_blocks[0].uniforms[0].array_count = 1;
      desc.fs.images[0].name = "data_image";
      desc.fs.images[0].image_type = SG_IMAGETYPE_ARRAY;
      desc.fs.images[0].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.fs.images[1].name = "atlas_coords";
      desc.fs.images[1].image_type = SG_IMAGETYPE_2D;
      desc.fs.images[1].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.fs.images[2].name = "atlas_layers";
      desc.fs.images[2].image_type = SG_IMAGETYPE_2D;
      desc.fs.images[2].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.fs.images[3].name = "atlas";
      desc.fs.images[3].image_type = SG_IMAGETYPE_ARRAY;
      desc.fs.images[3].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.fs.images[4].name = "palette";
      desc.fs.images[4].image_type = SG_IMAGETYPE_3D;
      desc.fs.images[4].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.label = "sprite_sprite_shader";
    }
    return &desc;
  }
  if (backend == SG_BACKEND_GLES3) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.attrs[0].name = "a_position";
      desc.attrs[1].name = "a_texcoord0";
      desc.attrs[2].name = "a_offset";
      desc.attrs[3].name = "a_size";
      desc.attrs[4].name = "a_color";
      desc.attrs[5].name = "a_id";
      desc.attrs[6].name = "a_index";
      desc.attrs[7].name = "a_flags";
      desc.vs.source = sprite_vs_source_glsl300es;
      desc.vs.entry = "main";
      desc.vs.uniform_blocks[0].size = 144;
      desc.vs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
      desc.vs.uniform_blocks[0].uniforms[0].name = "vs_params";
      desc.vs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.vs.uniform_blocks[0].uniforms[0].array_count = 9;
      desc.vs.images[0].name = "data_image";
      desc.vs.images[0].image_type = SG_IMAGETYPE_ARRAY;
      desc.vs.images[0].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.fs.source = sprite_fs_source_glsl300es;
      desc.fs.entry = "main";
      desc.fs.uniform_blocks[0].size = 16;
      desc.fs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
      desc.fs.uniform_blocks[0].uniforms[0].name = "fs_params";
      desc.fs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.fs.uniform_blocks[0].uniforms[0].array_count = 1;
      desc.fs.images[0].name = "data_image";
      desc.fs.images[0].image_type = SG_IMAGETYPE_ARRAY;
      desc.fs.images[0].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.fs.images[1].name = "atlas_coords";
      desc.fs.images[1].image_type = SG_IMAGETYPE_2D;
      desc.fs.images[1].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.fs.images[2].name = "atlas_layers";
      desc.fs.images[2].image_type = SG_IMAGETYPE_2D;
      desc.fs.images[2].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.fs.images[3].name = "atlas";
      desc.fs.images[3].image_type = SG_IMAGETYPE_ARRAY;
      desc.fs.images[3].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.fs.images[4].name = "palette";
      desc.fs.images[4].image_type = SG_IMAGETYPE_3D;
      desc.fs.images[4].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.label = "sprite_sprite_shader";
    }
    return &desc;
  }
  return 0;
}
#endif /* SOKOL_SHDC_IMPL */
